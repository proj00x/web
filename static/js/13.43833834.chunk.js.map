{"version":3,"sources":["views/Referrals/Referrals.tsx"],"names":["Referrals","referrals","useReferrals","allNodes","nodeLinks","i","length","push","id","referrer","referral","source","target","data","nodes","Array","from","Map","map","item","values","links","screenWidth","window","innerWidth","myConfig","nodeHighlightBehavior","linkHighlightBehavior","node","color","size","highlightStrokeColor","link","highlightColor","type","directed","width","height","Page","as","mb","mt","style","textAlign","flexDirection","alignItems","src","alt","config"],"mappings":"4MA2EeA,EApEa,WAK1B,IAJA,IAAMC,EAAYC,cAEZC,EAAW,GACXC,EAAY,GACTC,EAAI,EAAGA,EAAIJ,EAAUK,OAAQD,IACpCF,EAASI,KAAK,CACZC,GAAIP,EAAUI,GAAGI,WAEnBN,EAASI,KAAK,CACZC,GAAIP,EAAUI,GAAGK,WAEnBN,EAAUG,KAAK,CACbI,OAAQV,EAAUI,GAAGI,SACrBG,OAAQX,EAAUI,GAAGK,WAIzB,IAIIG,EAAO,CACXC,MALyBC,MAAMC,KAAK,IAAIC,IAAId,EAASe,KAAI,SAAAC,GAAI,MAAI,CAACA,EAAKX,GAAIW,OAAQC,UAMnFC,MAAOjB,GAIHkB,GAAeC,OAAOC,YAAc,GAAK,EAAID,OAAOC,WAAa,IACjEC,EAAW,CACfC,uBAAuB,EACvBC,uBAAuB,EACvBC,KAAM,CACJC,MAAO,UACPC,KAAM,IACNC,qBAAsB,WAExBC,KAAM,CACJC,eAAgB,UAChBC,KAAM,gBAERC,UAAU,EACVC,MAAOd,EAAc,IACrBe,OAAQf,EAAc,GAGtB,OACE,eAACgB,EAAA,EAAD,WACE,cAAC,IAAD,CAASC,GAAG,KAAKT,KAAK,KAAKD,MAAM,UAAUW,GAAG,OAAOC,GAAG,OAAOC,MAAO,CAAEC,UAAW,UAAnF,2BAGuB,IAAtB9B,EAAKC,MAAMR,OACZ,eAAC,IAAD,CAAMsC,cAAc,SAASC,WAAW,SAAxC,UACE,cAAC,IAAD,CAAOJ,GAAI,GAAIK,IAAI,WAAWC,IAAI,aAAaX,MAAO,IAAKC,OAAQ,MACnE,cAAC,IAAD,CAAMI,GAAI,GAAV,2BAGF,cAAC,QAAD,CACEjC,GAAG,WACHK,KAAMA,EACNmC,OAAQvB","file":"static/js/13.43833834.chunk.js","sourcesContent":["import React from 'react'\nimport { Image, Heading, Text, Flex } from '@pancakeswap-libs/uikit'\nimport { Graph } from 'react-d3-graph'\nimport Page from '../../components/layout/Page'\nimport { useReferrals } from '../../state/hooks'\n\n\nconst Referrals: React.FC = () => {\n  const referrals = useReferrals()\n\n  const allNodes = [];\n  const nodeLinks = [];\n  for (let i = 0; i < referrals.length; i++) {\n    allNodes.push({\n      id: referrals[i].referrer\n    })\n    allNodes.push({\n      id: referrals[i].referral\n    })\n    nodeLinks.push({\n      source: referrals[i].referrer,\n      target: referrals[i].referral\n    })\n  }\n\n  const arrayUniqueByKey = Array.from(new Map(allNodes.map(item => [item.id, item])).values())\n  \n  \n// graph payload (with minimalist structure)\nconst data = {\n  nodes: arrayUniqueByKey,\n  links: nodeLinks,\n};\n\n// the graph configuration, just override the ones you need\nconst screenWidth = (window.innerWidth || 0) > 0 ? window.innerWidth : 800\nconst myConfig = {\n  nodeHighlightBehavior: true,\n  linkHighlightBehavior: true,\n  node: {\n    color: \"#507a24\",\n    size: 200,\n    highlightStrokeColor: \"#856A26\",\n  },\n  link: {\n    highlightColor: \"#856A26\",\n    type: \"CURVE_SMOOTH\",\n  },\n  directed: true,\n  width: screenWidth - 200,\n  height: screenWidth / 2,\n};\n\n  return (\n    <Page>\n      <Heading as=\"h1\" size=\"xl\" color=\"#507a24\" mb=\"14px\" mt=\"30px\" style={{ textAlign: 'center' }}>\n        Referrals Map\n      </Heading>\n      {data.nodes.length === 0 ?\n      <Flex flexDirection=\"column\" alignItems=\"center\">\n        <Image mt={50} src=\"logo.png\" alt=\"Loading...\" width={100} height={100} />\n        <Text mt={20}>Loading...</Text>\n      </Flex>\n      : \n      <Graph\n        id=\"graph-id\" // id is mandatory\n        data={data}\n        config={myConfig}\n      />\n      }\n      \n    </Page>\n  )\n}\n\nexport default Referrals\n"],"sourceRoot":""}