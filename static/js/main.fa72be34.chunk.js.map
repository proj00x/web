{"version":3,"sources":["state/hooks.ts","utils/getRpcUrl.ts","utils/web3.ts","contexts/RefreshContext.tsx","state/actions.ts","contexts/Localisation/translationsContext.ts","components/layout/Container.tsx","components/layout/Page.tsx","config/constants/contracts.ts","hooks/useRefresh.ts","utils/formatAddress.ts","config/index.ts","config/constants/types.ts","utils/addressHelpers.ts","utils/multicall.ts","config/constants/farms.ts","fonts/CelticHand.woff","fonts/CelticHand.woff2","fonts/CelticHand.ttf","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","App.tsx","contexts/BlockContext.tsx","state/index.ts","Providers.tsx","index.tsx","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts"],"names":["ZERO","BigNumber","useFetchPublicData","account","dispatch","useDispatch","slowRefresh","useRefresh","useEffect","fetchFarmsPublicDataAsync","useReferrals","useSelector","state","farms","referrals","useFarms","data","useReferrer","referrer","useFarmFromPid","pid","find","f","useFarmUser","farm","allowance","userData","tokenBalance","stakedBalance","earnings","usePriceBnbBusd","PID_BUSD_BNB","tokenPriceVsQuote","usePriceCakeBusd","PID_CLOVER_BUSD","CLOVER_INITIAL_PRICE","useTotalValue","bnbPrice","cakePrice","value","i","length","totalValue","lpTotalInQuoteToken","isFinite","val","quoteTokenSymbol","QuoteToken","BNB","times","CAKE","plus","nodes","process","getNodeUrl","randomIndex","random","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","getWeb3","getContract","abi","address","contractOptions","eth","Contract","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","interval","setInterval","a","prev","clearInterval","Provider","defaultTranslationState","translations","setTranslations","TranslationsContext","Container","styled","div","theme","mediaQueries","sm","Page","lg","cake","56","97","masterChef","wbnb","mulltiCall","busd","useContext","fastRefresh","formatAddress","slice","config","EXPONENTIAL_AT","DECIMAL_PLACES","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","getCakeAddress","addresses","chainId","getMasterChefAddress","getMulticallAddress","multicall","calls","web3","multi","MultiCallAbi","itf","Interface","calldata","map","call","toLowerCase","encodeFunctionData","name","params","methods","aggregate","returnData","res","decodeFunctionResult","PID_CLOVER","CLOVER","CLOVER_BUSD_LP2","BNB_BUSD_LP2","WBNB","BTCB","BTCB_BUSD_LP2","ETH","ETH_BUSD_LP2","BUSD","DAI_BUSD_LP2","DAI","USDC_BUSD_LP2","USDC","USDT","USDT_BUSD_LP2","ADA","lpSymbol","order","linkUrl","isTokenOnly","mainAddresses","pricePoolAddresses","lpPrimaryAddresses","quoteTokenAdresses","contracts","icon","lpSource","icon2","virtualPrice","priceAddress","knownPrice","GlobalStyle","createGlobalStyle","ProjectFontTtf","ProjectFontWoff2","ProjectFontWoff","colors","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","storedLangCode","localStorage","getItem","storedLang","filter","getStoredLang","fetch","then","r","json","translationApiResponse","catch","e","console","error","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","label","href","items","Menu","props","useWallet","connect","reset","cakePriceUsd","login","logout","currentLang","langs","setLang","toNumber","links","priceLink","Wrapper","PageLoader","Home","lazy","Farms","Referrals","NotFound","App","window","basename","Global","fallback","path","exact","tokenMode","component","memo","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","getBlockNumber","blockNumber","current","configureStore","devTools","reducer","farmsReducer","Providers","rpcUrl","parseInt","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById","fetchFarms","Promise","all","farmsConfig","farmConfig","CHAIN_ID","push","erc20","lpTokenBalanceMC","tokenDecimals","tokenBalanceLP","quoteTokenBlanceLP","tokenAmount","pow","lpTotalSupply","quoteTokenDecimals","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","info","totalAllocPoint","allocPoint","_hex","poolWeight","toJSON","multiplier","toString","depositFeeBP","fetchFarmUserAllowances","masterChefAdress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","fetchUserReferrer","raw","fetchAllReferrals","callCount","count","callsReferrersOne","callReferrersAll","promisesReferrers","referrers","allReferrers","callsReferralsOne","callReferralsAll","j","promisesReferrals","obj","allReferrals","result","referral","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","action","liveFarmsData","payload","liveFarmData","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","setReferrerData","setReferrals","actions","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance"],"mappings":"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","file":"static/js/main.fa72be34.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { PID_BUSD_BNB, PID_CLOVER_BUSD } from 'config/constants/farms'\nimport { CLOVER_INITIAL_PRICE } from 'config'\nimport { fetchFarmsPublicDataAsync } from './actions'\nimport { State, Farm, RefRef } from './types'\nimport { QuoteToken } from '../config/constants/types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = (account) => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync(account))\n  }, [dispatch, slowRefresh, account])\n}\n\nexport const useReferrals = (): RefRef[] => {\n  const result = useSelector((state: State) => state.farms.referrals)\n  return result\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useReferrer = () => {\n  return useSelector((state: State) => state.farms.referrer)\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = PID_BUSD_BNB\n  const farm = useFarmFromPid(pid)\n  return farm?.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = PID_CLOVER_BUSD;\n  const farm = useFarmFromPid(pid);\n  return farm?.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : CLOVER_INITIAL_PRICE\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms();\n  const bnbPrice = usePriceBnbBusd();\n  const cakePrice = usePriceCakeBusd();\n  let value = new BigNumber(0);\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    const totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\n    \n    if (totalValue.isFinite()) {\n      let val: BigNumber;\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = (bnbPrice.times(totalValue));\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = (cakePrice.times(totalValue));\n      } else {\n        val = (totalValue);\n      }\n      value = value.plus(val);\n    }\n  }\n  \n  return value;\n}","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\n\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","export default {\n  cake: {\n    56: '0xb926F6C23749D2Da0426d0f6B36c96ed7fd3C69f',\n    97: '',\n  },\n  masterChef: {\n    56: '0x33b015366E7003068F6248E5ec861A2922Af867c',\n    97: '',\n  },\n  wbnb: {\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    97: '',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '',\n  },\n}\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","const formatAddress = (address: string) => {\n  return `${address.slice(0, 6)}...${address.slice(-6)}`\n}\n\nexport default formatAddress\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CLOVER_INITIAL_PRICE = new BigNumber(0.1)\nexport const CAKE_PER_BLOCK = new BigNumber(1e18)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\n","export enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpSource?: string\n  linkUrl: string\n  mainAddresses: Address\n  order: number\n  lpPrimaryAddresses?: Address\n  pricePoolAddresses?: Address\n  knownPrice?: number\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  isTokenOnly: boolean\n  icon: string\n  icon2?: string\n  virtualPrice?: string\n  priceAddress?: Address\n  isDisabled?: boolean\n}\n\n\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\n\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nexport const PID_CLOVER_BUSD = 26\nexport const PID_BUSD_BNB = 1\nexport const PID_CLOVER = 0\n\nconst CLOVER = { 56: '0xb926F6C23749D2Da0426d0f6B36c96ed7fd3C69f' }\nconst CLOVER_BUSD_LP2 = { 56: '0xb38e719a40c9bbb1bd4b5681b6874343f6342ea1' }\nconst BNB_BUSD_LP2 = { 56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16' }\nconst BNB_BUSD_WLP = { 56: '0x4bbed8d9a1b27a4ddd84a3368a850e78c9580404' }\nconst WBNB = { 56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c' }\nconst beltBNB = { 56: '0xa8bb71facdd46445644c277f9499dd22f6f0a30c' }\nconst BTCB = { 56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c' }\nconst BTCB_BUSD_LP2 = { 56: '0xf45cd219aef8618a92baa7ad848364a158a24f33' }\nconst beltBTC = { 56: '0x51bd63F240fB13870550423D208452cA87c44444' }\nconst ETH = { 56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8' }\nconst ETH_BUSD_LP2 = { 56: '0x7213a321f1855cf1779f42c0cd85d3d95291d34c' }\nconst beltETH = { 56: '0xaa20e8cb61299df2357561c2ac2e1172bc68bc25' }\nconst Belt4 = { 56: '0x9cb73f20164e399958261c289eb5f9846f4d1404' }\nconst BUSD = { 56: '0xe9e7cea3dedca5984780bafc599bd69add087d56' }\nconst beltDAI = { 56: '0x9a86fc508a423ae8a243445dba7ed5364118ab1d' }\nconst DAI_BUSD_LP2 = { 56: '0x66fdb2eccfb58cf098eaa419e5efde841368e489' }\nconst DAI = { 56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3' }\nconst beltUSDC = { 56: '0x7a59bf07d529a5fdbab67d597d63d7d5a83e61e5' }\nconst USDC_BUSD_LP2 = { 56: '0x2354ef4df11afacb85a5c7f98b624072eccddbb1' }\nconst USDC = { 56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d' }\nconst DOP = { 56: '0x9116f04092828390799514bac9986529d70c3791' }\nconst beltBUSD = { 56: '0x9171bf7c050ac8b4cf7835e51f7b4841dfb2ccd0' }\nconst USDT = { 56: '0x55d398326f99059ff775485246999027b3197955' }\nconst USDT_BUSD_LP2 = { 56: '0x7efaef62fddcca950418312c6c91aef321375a00' }\nconst beltUSDT = { 56: '0x55e1b1e49b969c018f2722445cd2dd9818ddcc25' }\nconst ADA_BNB_LP2 = { 56: '0x28415ff2c35b65b9e5c7de82126b4015ab9d031f' }\nconst ADA = { 56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47' }\nconst ETH_BUSD_WLP = { 56: '0x40a2739d8b2cddd5edb8b563ba8e4c3326e23716' }\nconst USDT_BUSD_MDEX = { 56: '0x62c1dec1ff328dcdc157ae0068bb21af3967acd9' }\nconst BTCB_WBNB_BAK = { 56: '0x58521373474810915b02FE968D1BCBe35Fc61E09' }\nconst BTCB_WBNB_MDEX = { 56: '0x969f2556F786a576F32AeF6c1D6618f0221Ec70e' }\nconst ETH_WBNB_MDEX = { 56: '0x82E8F9e7624fA038DfF4a39960F5197A43fa76aa' }\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    lpSymbol: 'CLOVER',\n    order: 0,\n    linkUrl: `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${CLOVER[56]}`,\n    isTokenOnly: true,\n    mainAddresses: CLOVER,\n    pricePoolAddresses: CLOVER_BUSD_LP2,\n    lpPrimaryAddresses: CLOVER,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'CLOVER',\n  },\n  {\n    pid: 1,\n    lpSymbol: 'BUSD-BNB',\n    lpSource: 'LPv2',\n    order: 0,\n    linkUrl: `https://exchange.pancakeswap.finance/#/add/BNB/${BUSD[56]}`,\n    isTokenOnly: false,\n    mainAddresses: BNB_BUSD_LP2,\n    lpPrimaryAddresses: WBNB,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'BUSD',\n    icon2: 'BNB',\n  },\n  {\n    pid: 2,\n    lpSymbol: 'WBNB',\n    lpSource: 'Binance',\n    order: 0,\n    linkUrl: `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${WBNB[56]}`,\n    isTokenOnly: true,\n    mainAddresses: WBNB,\n    pricePoolAddresses: BNB_BUSD_LP2,\n    lpPrimaryAddresses: WBNB,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'BNB',\n  },\n  {\n    pid: 3,\n    lpSymbol: 'beltBNB',\n    lpSource: 'belt',\n    order: 0,\n    linkUrl: 'https://belt.fi/bsc',\n    isTokenOnly: true,\n    mainAddresses: beltBNB,\n    pricePoolAddresses: BNB_BUSD_LP2,\n    lpPrimaryAddresses: WBNB,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'BNB',\n    virtualPrice: '1025038430973610037',\n    priceAddress: {\n      56: '0xa8bb71facdd46445644c277f9499dd22f6f0a30c'\n    },\n  },\n  {\n    pid: 4,\n    lpSymbol: 'BTCB',\n    lpSource: 'Binance',\n    order: 0,\n    linkUrl: `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${BTCB[56]}`,\n    isTokenOnly: true,\n    mainAddresses: BTCB,\n    pricePoolAddresses: BTCB_BUSD_LP2,\n    lpPrimaryAddresses: BTCB,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'BTCB',\n  },\n  {\n    pid: 5,\n    lpSymbol: 'beltBTC',\n    lpSource: 'belt',\n    order: 0,\n    linkUrl: 'https://belt.fi/bsc',\n    isTokenOnly: true,\n    mainAddresses: beltBTC,\n    pricePoolAddresses: BTCB_BUSD_LP2,\n    lpPrimaryAddresses: BTCB,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'BTCB',\n    virtualPrice: '1006803047943268999',\n    priceAddress: {\n      56: '0x51bd63F240fB13870550423D208452cA87c44444'\n    },\n  },\n  {\n    pid: 6,\n    lpSymbol: 'ETH',\n    lpSource: 'Binance',\n    order: 0,\n    linkUrl: `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${ETH[56]}`,\n    isTokenOnly: true,\n    mainAddresses: ETH,\n    pricePoolAddresses: ETH_BUSD_LP2,\n    lpPrimaryAddresses: ETH,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'ETH',\n  },\n  {\n    pid: 7,\n    lpSymbol: 'beltETH',\n    lpSource: 'belt',\n    order: 0,\n    linkUrl: 'https://belt.fi/bsc',\n    isTokenOnly: true,\n    mainAddresses: beltETH,\n    pricePoolAddresses: ETH_BUSD_LP2,\n    lpPrimaryAddresses: ETH,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'ETH',\n    virtualPrice: '1011448308506081845',\n    priceAddress: {\n      56: '0xaa20e8cb61299df2357561c2ac2e1172bc68bc25'\n    },\n  },\n  {\n    pid: 8,\n    lpSymbol: '4Belt',\n    lpSource: 'belt',\n    order: 0,\n    linkUrl: 'https://belt.fi/bsc',\n    isTokenOnly: true,\n    mainAddresses: Belt4,\n\n    knownPrice: 1,\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: '4Belt',\n    virtualPrice: '967002810124104136',\n    priceAddress: {\n      56: '0xAEA4f7dcd172997947809CE6F12018a6D5c1E8b6'\n    },\n  },\n  {\n    pid: 9,\n    lpSymbol: 'DOP-LP',\n    lpSource: 'dopple',\n    order: 0,\n    linkUrl: 'https://dopple.finance/Deposit/dop-lps',\n    isTokenOnly: true,\n    mainAddresses: DOP,\n\n    knownPrice: 1,\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'dop',\n    virtualPrice: '1033653437147634690',\n    priceAddress: {\n      56: '0x5162f992EDF7101637446ecCcD5943A9dcC63A8A'\n    },\n  },\n  {\n    pid: 10,\n    lpSymbol: 'BUSD',\n    lpSource: 'Binance',\n    order: 0,\n    linkUrl: `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${BUSD[56]}`,\n    isTokenOnly: true,\n    mainAddresses: BUSD,\n\n    knownPrice: 1,\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'BUSD',\n  },\n  {\n    pid: 11,\n    lpSymbol: 'beltBUSD',\n    lpSource: 'belt',\n    order: 0,\n    linkUrl: 'https://belt.fi/bsc',\n    isTokenOnly: true,\n    mainAddresses: beltBUSD,\n\n    knownPrice: 1,\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'BUSD',\n    virtualPrice: '806221854405422288',\n    priceAddress: {\n      56: '0x9171Bf7c050aC8B4cf7835e51F7b4841DFB2cCD0'\n    },\n  },\n  {\n    pid: 12,\n    lpSymbol: 'USDT',\n    lpSource: 'Binance',\n    order: 0,\n    linkUrl: `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${USDT[56]}`,\n    isTokenOnly: true,\n    mainAddresses: USDT,\n    pricePoolAddresses: USDT_BUSD_LP2,\n    lpPrimaryAddresses: USDT,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'USDT',\n  },\n  {\n    pid: 13,\n    lpSymbol: 'beltUSDT',\n    lpSource: 'belt',\n    order: 0,\n    linkUrl: 'https://belt.fi/bsc',\n    isTokenOnly: true,\n    mainAddresses: beltUSDT,\n    pricePoolAddresses: USDT_BUSD_LP2,\n    lpPrimaryAddresses: USDT,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'USDT',\n    virtualPrice: '1035606326971902167',\n    priceAddress: {\n      56: '0x55e1b1e49b969c018f2722445cd2dd9818ddcc25'\n    },\n  },\n  {\n    pid: 14,\n    lpSymbol: 'USDC',\n    lpSource: 'Binance',\n    order: 0,\n    linkUrl: `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${USDC[56]}`,\n    isTokenOnly: true,\n    mainAddresses: USDC,\n    pricePoolAddresses: USDC_BUSD_LP2,\n    lpPrimaryAddresses: USDC,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'USDC',\n  },\n  {\n    pid: 15,\n    lpSymbol: 'beltUSDC',\n    lpSource: 'belt',\n    order: 0,\n    linkUrl: 'https://belt.fi/bsc',\n    isTokenOnly: true,\n    mainAddresses: beltUSDC,\n    pricePoolAddresses: USDC_BUSD_LP2,\n    lpPrimaryAddresses: USDC,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'USDC',\n    virtualPrice: '1037320784537116179',\n    priceAddress: {\n      56: '0x7a59bf07d529a5fdbab67d597d63d7d5a83e61e5'\n    },\n  },\n  {\n    pid: 16,\n    lpSymbol: 'DAI',\n    lpSource: 'Binance',\n    order: 0,\n    linkUrl: `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${DAI[56]}`,\n    isTokenOnly: true,\n    mainAddresses: DAI,\n    pricePoolAddresses: DAI_BUSD_LP2,\n    lpPrimaryAddresses: DAI,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'DAI',\n  },\n  {\n    pid: 17,\n    lpSymbol: 'beltDAI',\n    lpSource: 'belt',\n    order: 0,\n    linkUrl: 'https://belt.fi/bsc',\n    isTokenOnly: true,\n    mainAddresses: beltDAI,\n    pricePoolAddresses: DAI_BUSD_LP2,\n    lpPrimaryAddresses: DAI,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'DAI',\n    virtualPrice: '1008919370822716049',\n    priceAddress: {\n      56: '0x9a86fc508a423ae8a243445dba7ed5364118ab1d'\n    },\n  },\n  \n  {\n    pid: 18,\n    lpSymbol: 'BUSD-BNB',\n    lpSource: 'wault',\n    order: 0,\n    linkUrl: `https://swap.wault.finance/bsc/index.html#/add/BNB/${BUSD[56]}`,\n    isTokenOnly: false,\n    mainAddresses: BNB_BUSD_WLP,\n    lpPrimaryAddresses: WBNB,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'BUSD',\n    icon2: 'BNB',\n  },\n  {\n    pid: 19,\n    lpSymbol: 'ADA-BNB',\n    lpSource: 'LPv2',\n    order: 0,\n    linkUrl: `https://exchange.pancakeswap.finance/#/add/BNB/${ADA[56]}`,\n    isTokenOnly: false,\n    mainAddresses: ADA_BNB_LP2,\n    lpPrimaryAddresses: ADA,\n\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n    icon: 'ADA',\n    icon2: 'BNB',\n  },\n  {\n    pid: 20,\n    lpSymbol: 'ETH-BUSD',\n    lpSource: 'wault',\n    order: 0,\n    linkUrl: `https://swap.wault.finance/bsc/index.html#/add/${ETH[56]}/${BUSD[56]}`,\n    isTokenOnly: false,\n    mainAddresses: ETH_BUSD_WLP,\n    lpPrimaryAddresses: ETH,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'ETH',\n    icon2: 'BUSD',\n  },\n  {\n    pid: 21,\n    lpSymbol: 'USDT-BUSD',\n    lpSource: 'LPv2',\n    order: 0,\n    linkUrl: `https://exchange.pancakeswap.finance/#/add/${USDT[56]}/${BUSD[56]}`,\n    isTokenOnly: false,\n    mainAddresses: USDT_BUSD_LP2,\n    lpPrimaryAddresses: USDT,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'USDT',\n    icon2: 'BUSD',\n  },\n  {\n    pid: 22,\n    lpSymbol: 'USDT-BUSD',\n    lpSource: 'mdex',\n    order: 0,\n    linkUrl: `https://bsc.mdex.com/#/create/${USDT[56]}/${BUSD[56]}`,\n    isTokenOnly: false,\n    mainAddresses: USDT_BUSD_MDEX,\n    lpPrimaryAddresses: USDT,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'USDT',\n    icon2: 'BUSD',\n  },\n  {\n    pid: 23,\n    lpSymbol: 'BTCB-BNB',\n    lpSource: 'bakery',\n    order: 0,\n    linkUrl: `https://www.bakeryswap.org/#/add/${BTCB[56]}/ETH`,\n    isTokenOnly: false,\n    mainAddresses: BTCB_WBNB_BAK,\n    lpPrimaryAddresses: BTCB,\n\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n    icon: 'BTCB',\n    icon2: 'BNB',\n  },\n  {\n    pid: 24,\n    lpSymbol: 'BTCB-BNB',\n    lpSource: 'mdex',\n    order: 0,\n    linkUrl: `https://bsc.mdex.com/#/create/${BTCB[56]}/BNB`,\n    isTokenOnly: false,\n    mainAddresses: BTCB_WBNB_MDEX,\n    lpPrimaryAddresses: BTCB,\n\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n    icon: 'BTCB',\n    icon2: 'BNB',\n  },\n  {\n    pid: 25,\n    lpSymbol: 'ETH-BNB',\n    lpSource: 'mdex',\n    order: 0,\n    linkUrl: `https://bsc.mdex.com/#/create/${ETH[56]}/BNB`,\n    isTokenOnly: false,\n    mainAddresses: ETH_WBNB_MDEX,\n    lpPrimaryAddresses: ETH,\n\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n    icon: 'BTCB',\n    icon2: 'BNB',\n  },\n  {\n    pid: 26,\n    lpSymbol: 'CLOVER-BUSD',\n    lpSource: 'LPv2',\n    order: 100,\n    linkUrl: `https://exchange.pancakeswap.finance/#/add/${CLOVER[56]}/${BUSD[56]}`,\n    isTokenOnly: false,\n    mainAddresses: CLOVER_BUSD_LP2,\n    lpPrimaryAddresses: CLOVER,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'CLOVER',\n    icon2: 'BUSD',\n  },\n\n]\n\nexport default farms\n","export default __webpack_public_path__ + \"static/media/CelticHand.42969f26.woff\";","export default __webpack_public_path__ + \"static/media/CelticHand.f98320be.woff2\";","export default __webpack_public_path__ + \"static/media/CelticHand.0612b4dd.ttf\";","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap-libs/uikit'\n\nimport ProjectFontWoff from '../fonts/CelticHand.woff'\nimport ProjectFontWoff2 from '../fonts/CelticHand.woff2'\nimport ProjectFontTtf from '../fonts/CelticHand.ttf'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'ProjectFont';\n    font-style: normal;\n    font-weight: 400;\n    src:\n        url(${ProjectFontTtf}) format('truetype'),\n        url(${ProjectFontWoff2}) format('woff2'),\n        url(${ProjectFontWoff}) format('woff');\n  }\n  * {\n    font-family: sans-serif, 'ProjectFont';\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\n\nexport const allLanguages = [\n  EN,\n]\n","import React, { useState, useEffect } from 'react'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then(r=>r.json())\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error(\"ERROR\");\n          console.error(e);\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'rainbow.svg',\n    href: '/',\n  },\n  {\n    label: 'Pot of Gold',\n    icon: 'gold-pot-1.svg',\n    href: '/pot',\n  },\n  {\n    label: 'Magic Hat',\n    icon: 'gold-pot.svg',\n    href: '/hat',\n  },\n  {\n    label: 'Referrals',\n    icon: 'leprechaun-3.svg',\n    href: 'https://docs.potofgold.fi/referral-system',\n  },\n  {\n    label: 'Referrals Map',\n    icon: 'placeholder.svg',\n    href: '/refs',\n  },\n  {\n    label: 'Exchange',\n    icon: 'beer-1.svg',\n    href: 'https://exchange.pancakeswap.finance/#/swap?outputCurrency=0xb926F6C23749D2Da0426d0f6B36c96ed7fd3C69f',\n  },\n  {\n    label: 'Liquidity',\n    icon: 'coins.svg',\n    href: 'https://exchange.pancakeswap.finance/#/add/0xe9e7cea3dedca5984780bafc599bd69add087d56/0xb926F6C23749D2Da0426d0f6B36c96ed7fd3C69f',\n  },\n  {\n    label: 'Road Map',\n    icon: 'saint-patrick.svg',\n    href: 'https://docs.potofgold.fi/roadmap',\n  },\n  {\n    label: 'More',\n    icon: 'balloons.svg',\n    items: [\n      {\n        label: 'Docs',\n        href: 'https://docs.potofgold.fi',\n      },\n      {\n        label: 'Github',\n        href: 'https://github.com/proj00x/',\n      },\n      {\n        label: 'Info',\n        href: 'https://pancakeswap.info/token/0xb926F6C23749D2Da0426d0f6B36c96ed7fd3C69f',\n      },\n    ],\n  },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      priceLink=\"https://bscscan.com/token/0xb926F6C23749D2Da0426d0f6B36c96ed7fd3C69f\"\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Referrals = lazy(() => import('./views/Referrals'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData(account)\n\n  return (\n    <Router basename='/'>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/pot\">\n              <Farms />\n            </Route>\n            <Route path=\"/hat\">\n              <Farms tokenMode/>\n            </Route>\n            <Route path=\"/refs\">\n              <Referrals/>\n            </Route>\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID);\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <bsc.UseWalletProvider\n            chainId={chainId}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </bsc.UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {    \n      let tokenAmount: BigNumber;\n      let lpTotalInQuoteToken: BigNumber;\n      let tokenPriceVsQuote: BigNumber;\n      \n      if (farmConfig.isTokenOnly) {\n        const calls = [\n          // Balance of LP tokens in the master chef contract\n          {\n            address: farmConfig.mainAddresses[CHAIN_ID],\n            name: 'balanceOf',\n            params: [getMasterChefAddress()],\n          },\n          // Token decimals\n          {\n            address: farmConfig.mainAddresses[CHAIN_ID],\n            name: 'decimals',\n          },\n        ]\n  \n        if (!farmConfig.knownPrice) {\n          calls.push(\n            // Balance of token in the LP contract\n            {\n              address: farmConfig.lpPrimaryAddresses[CHAIN_ID],\n              name: 'balanceOf',\n              params: [farmConfig.pricePoolAddresses[CHAIN_ID]],\n            },\n            // Balance of quote token on LP contract\n            {\n              address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n              name: 'balanceOf',\n              params: [farmConfig.pricePoolAddresses[CHAIN_ID]],\n            },\n          )\n        }\n\n        const [\n          lpTokenBalanceMC,\n          tokenDecimals,\n          tokenBalanceLP,\n          quoteTokenBlanceLP,\n        ] = await multicall(erc20, calls)\n        tokenAmount = new BigNumber(lpTokenBalanceMC)\n          .div(new BigNumber(10).pow(tokenDecimals));\n\n        if (farmConfig.knownPrice) {\n          tokenPriceVsQuote = new BigNumber(farmConfig.knownPrice);\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP)\n            .div(new BigNumber(tokenBalanceLP));\n        }\n        if (farmConfig.virtualPrice) {\n          tokenPriceVsQuote = tokenPriceVsQuote\n            .times(new BigNumber(farmConfig.virtualPrice).div(new BigNumber(10).pow(tokenDecimals)))\n        }\n\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote);\n        \n      } else {\n\n        const calls = [\n          // Balance of token in the LP contract\n          {\n            address: farmConfig.lpPrimaryAddresses[CHAIN_ID],\n            name: 'balanceOf',\n            params: [farmConfig.mainAddresses[CHAIN_ID]],\n          },\n          // Balance of quote token on LP contract\n          {\n            address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n            name: 'balanceOf',\n            params: [farmConfig.mainAddresses[CHAIN_ID]],\n          },\n          // Balance of LP tokens in the master chef contract\n          {\n            address: farmConfig.mainAddresses[CHAIN_ID],\n            name: 'balanceOf',\n            params: [getMasterChefAddress()],\n          },\n          // Total supply of LP tokens\n          {\n            address: farmConfig.mainAddresses[CHAIN_ID],\n            name: 'totalSupply',\n          },\n          // Token decimals\n          {\n            address: farmConfig.lpPrimaryAddresses[CHAIN_ID],\n            name: 'decimals',\n          },\n          // Quote token decimals\n          {\n            address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n            name: 'decimals',\n          },\n        ]\n  \n        const [\n          tokenBalanceLP,\n          quoteTokenBlanceLP,\n          lpTokenBalanceMC,\n          lpTotalSupply,\n          tokenDecimals,\n          quoteTokenDecimals\n        ] = await multicall(erc20, calls)\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = quoteTokenAmount.times(new BigNumber(2))\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP)\n          .div(new BigNumber(10).pow(tokenDecimals))\n          .times(lpTokenRatio)\n\n        if (tokenAmount.comparedTo(0) > 0) {\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount);\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\n        }\n      }\n\n      const [info, totalAllocPoint ] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP.toNumber(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { formatAddress } from 'utils'\nimport { RefRef } from '../types'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.mainAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.mainAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingToken',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n\nexport const fetchUserReferrer = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = [{\n    address: masterChefAdress,\n    name: 'referrals',\n    params: [account],\n  }]\n\n  const raw = await multicall(masterchefABI, calls)\n  \n  return raw[0][0]\n}\n\nexport const fetchAllReferrals = async () => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const callCount = [{\n    address: masterChefAdress,\n    name: 'referralsCount',\n    params: [],\n  }]\n\n  const count = (await multicall(masterchefABI, callCount))[0][0].toNumber()\n\n  let callsReferrersOne = []\n  const callReferrersAll = []\n  for (let i = 0; i < count; i++) {\n    callsReferrersOne.push({\n      address: masterChefAdress,\n      name: 'allReferrals',\n      params: [i],\n    })\n\n    if (i === count - 1 || callsReferrersOne.length % 10 === 0) {\n      callReferrersAll.push(callsReferrersOne)\n      callsReferrersOne = []\n    }\n  }\n\n  const promisesReferrers = callReferrersAll.map(async calls => {\n    const referrers = await multicall(masterchefABI, calls)\n    return referrers\n  })\n  const allReferrers = await Promise.all(promisesReferrers)\n\n\n  let callsReferralsOne = []\n  const callReferralsAll = []\n\n  for (let i = 0; i < allReferrers.length; i++) {\n    for (let j = 0; j < allReferrers[i].length; j++) {\n      callsReferralsOne.push({\n        address: masterChefAdress,\n        name: 'referrals',\n        params: [allReferrers[i][j][0]],\n      })\n    }\n\n    callReferralsAll.push(callsReferralsOne)\n    callsReferralsOne = []\n  }\n\n  const promisesReferrals = callReferralsAll.map(async calls => {\n    const referrals = await multicall(masterchefABI, calls)\n    return [referrals, calls.map((obj) => obj.params)]\n  })\n  const allReferrals = await Promise.all(promisesReferrals)\n\n  const result: RefRef[] = []\n  for (let i = 0; i < allReferrals.length; i++) {\n    for (let j = 0; j < allReferrals[i][0].length; j++) {\n      result.push({\n        referrer: formatAddress(allReferrals[i][0][j][0]),\n        referral: formatAddress(allReferrals[i][1][j][0]),\n      })\n    }\n  }\n  \n  return result\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n  fetchUserReferrer,\n  fetchAllReferrals,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig], referrer: null, referrals: [] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n    setReferrerData: (state, action) => {\n      state.referrer = action.payload\n    },\n    setReferrals: (state, action) => {\n      state.referrals = action.payload\n    }\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData, setReferrerData, setReferrals } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = (account) => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n\n  if (account) {\n    const referrer = await fetchUserReferrer(account)\n    dispatch(setReferrerData(referrer))\n  }\n\n  const referrals = await fetchAllReferrals()\n  \n  dispatch(setReferrals(referrals))\n}\n\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n"],"sourceRoot":""}