{"version":3,"sources":["state/hooks.ts","utils/getRpcUrl.ts","utils/web3.ts","contexts/RefreshContext.tsx","state/actions.ts","contexts/Localisation/translationsContext.ts","hooks/useRefresh.ts","config/constants/contracts.ts","components/layout/Container.tsx","components/layout/Page.tsx","config/index.ts","config/constants/types.ts","utils/addressHelpers.ts","config/constants/farms.ts","utils/multicall.ts","fonts/CelticHand.woff","fonts/CelticHand.woff2","fonts/CelticHand.ttf","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","App.tsx","contexts/BlockContext.tsx","state/index.ts","Providers.tsx","index.tsx","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts"],"names":["ZERO","BigNumber","useFetchPublicData","account","dispatch","useDispatch","slowRefresh","useRefresh","useEffect","fetchFarmsPublicDataAsync","useFarms","useSelector","state","farms","data","useReferrer","referrer","useFarmFromPid","pid","find","f","useFarmUser","farm","allowance","userData","tokenBalance","stakedBalance","earnings","usePriceBnbBusd","PID_BUSD_BNB","tokenPriceVsQuote","usePriceCakeBusd","PID_CLOVER_BUSD","CLOVER_INITIAL_PRICE","useTotalValue","bnbPrice","cakePrice","value","i","length","totalValue","lpTotalInQuoteToken","isFinite","val","quoteTokenSymbol","QuoteToken","BNB","times","CAKE","plus","nodes","process","getNodeUrl","randomIndex","random","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","getWeb3","getContract","abi","address","contractOptions","eth","Contract","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","interval","setInterval","a","prev","clearInterval","Provider","defaultTranslationState","translations","setTranslations","TranslationsContext","useContext","fastRefresh","cake","56","97","masterChef","wbnb","mulltiCall","busd","Container","styled","div","theme","mediaQueries","sm","Page","lg","config","EXPONENTIAL_AT","DECIMAL_PLACES","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","getCakeAddress","addresses","chainId","getMasterChefAddress","getMulticallAddress","PID_CLOVER","CLOVER","BNB_BUSD_LP2","WBNB","BTCB","BTCB_BUSD_LP2","ETH","ETH_BUSD_LP2","BUSD","DAI_BUSD_LP2","DAI","USDC_BUSD_LP2","USDC","USDT","USDT_BUSD_LP2","ADA","lpSymbol","linkUrl","isTokenOnly","mainAddresses","pricePoolAddresses","lpPrimaryAddresses","quoteTokenAdresses","contracts","icon","lpSource","icon2","virtualPrice","priceAddress","knownPrice","multicall","calls","web3","multi","MultiCallAbi","itf","Interface","calldata","map","call","toLowerCase","encodeFunctionData","name","params","methods","aggregate","returnData","res","decodeFunctionResult","GlobalStyle","createGlobalStyle","ProjectFontTtf","ProjectFontWoff2","ProjectFontWoff","colors","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","storedLangCode","localStorage","getItem","storedLang","filter","getStoredLang","fetch","then","r","json","translationApiResponse","catch","e","console","error","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","label","href","items","Menu","props","useWallet","connect","reset","cakePriceUsd","login","logout","currentLang","langs","setLang","toNumber","links","priceLink","Wrapper","PageLoader","Home","lazy","Farms","NotFound","App","window","Global","fallback","path","exact","tokenMode","component","memo","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","getBlockNumber","blockNumber","current","configureStore","devTools","reducer","farmsReducer","Providers","rpcUrl","parseInt","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById","fetchFarms","Promise","all","farmsConfig","farmConfig","CHAIN_ID","push","erc20","lpTokenBalanceMC","tokenDecimals","tokenBalanceLP","quoteTokenBlanceLP","tokenAmount","pow","lpTotalSupply","quoteTokenDecimals","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","info","totalAllocPoint","allocPoint","_hex","poolWeight","toJSON","multiplier","toString","depositFeeBP","fetchFarmUserAllowances","masterChefAdress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","fetchUserReferrer","raw","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","action","liveFarmsData","payload","liveFarmData","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","setReferrerData","actions","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance"],"mappings":"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","file":"static/js/main.1efd041d.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { PID_BUSD_BNB, PID_CLOVER_BUSD } from 'config/constants/farms'\nimport { CLOVER_INITIAL_PRICE } from 'config'\nimport { fetchFarmsPublicDataAsync } from './actions'\nimport { State, Farm } from './types'\nimport { QuoteToken } from '../config/constants/types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = (account) => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync(account))\n  }, [dispatch, slowRefresh, account])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useReferrer = () => {\n  return useSelector((state: State) => state.farms.referrer)\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = PID_BUSD_BNB\n  const farm = useFarmFromPid(pid)\n  return farm?.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = PID_CLOVER_BUSD;\n  const farm = useFarmFromPid(pid);\n  return farm?.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : CLOVER_INITIAL_PRICE\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms();\n  const bnbPrice = usePriceBnbBusd();\n  const cakePrice = usePriceCakeBusd();\n  let value = new BigNumber(0);\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    const totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\n    \n    if (totalValue.isFinite()) {\n      let val: BigNumber;\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = (bnbPrice.times(totalValue));\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = (cakePrice.times(totalValue));\n      } else {\n        val = (totalValue);\n      }\n      value = value.plus(val);\n    }\n  }\n  \n  return value;\n}","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\n\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","export default {\n  cake: {\n    56: '0xb926F6C23749D2Da0426d0f6B36c96ed7fd3C69f',\n    97: '',\n  },\n  masterChef: {\n    56: '0x33b015366E7003068F6248E5ec861A2922Af867c',\n    97: '',\n  },\n  wbnb: {\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    97: '',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '',\n  },\n}\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CLOVER_INITIAL_PRICE = new BigNumber(0.1)\nexport const CAKE_PER_BLOCK = new BigNumber(1e18)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\n","export enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpSource?: string\n  linkUrl: string\n  mainAddresses: Address\n  lpPrimaryAddresses?: Address\n  pricePoolAddresses?: Address\n  knownPrice?: number\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  isTokenOnly: boolean\n  icon: string\n  icon2?: string\n  virtualPrice?: string\n  priceAddress?: Address\n  isDisabled?: boolean\n}\n\n\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\n\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nexport const PID_CLOVER_BUSD = 100\nexport const PID_BUSD_BNB = 1\nexport const PID_CLOVER = 0\n\nconst CLOVER = { 56: '0xb926F6C23749D2Da0426d0f6B36c96ed7fd3C69f' }\nconst CLOVER_BUSD_LP2 = { 56: '0xb926F6C23749D2Da0426d0f6B36c96ed7fd3C69f' } // TODO\nconst BNB_BUSD_LP2 = { 56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16' }\nconst BNB_BUSD_WLP = { 56: '0x4bbed8d9a1b27a4ddd84a3368a850e78c9580404' }\nconst WBNB = { 56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c' }\nconst beltBNB = { 56: '0xa8bb71facdd46445644c277f9499dd22f6f0a30c' }\nconst BTCB = { 56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c' }\nconst BTCB_BUSD_LP2 = { 56: '0xf45cd219aef8618a92baa7ad848364a158a24f33' }\nconst beltBTC = { 56: '0x51bd63F240fB13870550423D208452cA87c44444' }\nconst ETH = { 56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8' }\nconst ETH_BUSD_LP2 = { 56: '0x7213a321f1855cf1779f42c0cd85d3d95291d34c' }\nconst beltETH = { 56: '0xaa20e8cb61299df2357561c2ac2e1172bc68bc25' }\nconst Belt4 = { 56: '0x9cb73f20164e399958261c289eb5f9846f4d1404' }\nconst BUSD = { 56: '0xe9e7cea3dedca5984780bafc599bd69add087d56' }\nconst beltDAI = { 56: '0x9a86fc508a423ae8a243445dba7ed5364118ab1d' }\nconst DAI_BUSD_LP2 = { 56: '0x66fdb2eccfb58cf098eaa419e5efde841368e489' }\nconst DAI = { 56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3' }\nconst beltUSDC = { 56: '0x7a59bf07d529a5fdbab67d597d63d7d5a83e61e5' }\nconst USDC_BUSD_LP2 = { 56: '0x2354ef4df11afacb85a5c7f98b624072eccddbb1' }\nconst USDC = { 56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d' }\nconst DOP = { 56: '0x9116f04092828390799514bac9986529d70c3791' }\nconst beltBUSD = { 56: '0x9171bf7c050ac8b4cf7835e51f7b4841dfb2ccd0' }\nconst USDT = { 56: '0x55d398326f99059ff775485246999027b3197955' }\nconst USDT_BUSD_LP2 = { 56: '0x7efaef62fddcca950418312c6c91aef321375a00' }\nconst beltUSDT = { 56: '0x55e1b1e49b969c018f2722445cd2dd9818ddcc25' }\nconst ADA_BNB_LP2 = { 56: '0x28415ff2c35b65b9e5c7de82126b4015ab9d031f' }\nconst ADA = { 56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47' }\nconst ETH_BUSD_WLP = { 56: '0x40a2739d8b2cddd5edb8b563ba8e4c3326e23716' }\nconst USDT_BUSD_MDEX = { 56: '0x62c1dec1ff328dcdc157ae0068bb21af3967acd9' }\nconst BTCB_WBNB_BAK = { 56: '0x58521373474810915b02FE968D1BCBe35Fc61E09' }\nconst BTCB_WBNB_MDEX = { 56: '0x969f2556F786a576F32AeF6c1D6618f0221Ec70e' }\nconst ETH_WBNB_MDEX = { 56: '0x82E8F9e7624fA038DfF4a39960F5197A43fa76aa' }\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    lpSymbol: 'CLOVER',\n    linkUrl: `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${CLOVER[56]}`,\n    isTokenOnly: true,\n    mainAddresses: CLOVER,\n    pricePoolAddresses: CLOVER_BUSD_LP2,\n    lpPrimaryAddresses: CLOVER,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'CLOVER',\n  },\n  {\n    pid: 1,\n    lpSymbol: 'BUSD-BNB',\n    lpSource: 'LPv2',\n    linkUrl: `https://exchange.pancakeswap.finance/#/add/BNB/${BUSD[56]}`,\n    isTokenOnly: false,\n    mainAddresses: BNB_BUSD_LP2,\n    lpPrimaryAddresses: WBNB,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'BUSD',\n    icon2: 'BNB',\n  },\n  {\n    pid: 2,\n    lpSymbol: 'WBNB',\n    lpSource: 'Binance',\n    linkUrl: `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${WBNB[56]}`,\n    isTokenOnly: true,\n    mainAddresses: WBNB,\n    pricePoolAddresses: BNB_BUSD_LP2,\n    lpPrimaryAddresses: WBNB,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'BNB',\n  },\n  {\n    pid: 3,\n    lpSymbol: 'beltBNB',\n    lpSource: 'belt',\n    linkUrl: 'https://belt.fi/bsc',\n    isTokenOnly: true,\n    mainAddresses: beltBNB,\n    pricePoolAddresses: BNB_BUSD_LP2,\n    lpPrimaryAddresses: WBNB,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'BNB',\n    virtualPrice: '1025038430973610037',\n    priceAddress: {\n      56: '0xa8bb71facdd46445644c277f9499dd22f6f0a30c'\n    },\n  },\n  {\n    pid: 4,\n    lpSymbol: 'BTCB',\n    lpSource: 'Binance',\n    linkUrl: `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${BTCB[56]}`,\n    isTokenOnly: true,\n    mainAddresses: BTCB,\n    pricePoolAddresses: BTCB_BUSD_LP2,\n    lpPrimaryAddresses: BTCB,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'BTCB',\n  },\n  {\n    pid: 5,\n    lpSymbol: 'beltBTC',\n    lpSource: 'belt',\n    linkUrl: 'https://belt.fi/bsc',\n    isTokenOnly: true,\n    mainAddresses: beltBTC,\n    pricePoolAddresses: BTCB_BUSD_LP2,\n    lpPrimaryAddresses: BTCB,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'BTCB',\n    virtualPrice: '1006803047943268999',\n    priceAddress: {\n      56: '0x51bd63F240fB13870550423D208452cA87c44444'\n    },\n  },\n  {\n    pid: 6,\n    lpSymbol: 'ETH',\n    lpSource: 'Binance',\n    linkUrl: `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${ETH[56]}`,\n    isTokenOnly: true,\n    mainAddresses: ETH,\n    pricePoolAddresses: ETH_BUSD_LP2,\n    lpPrimaryAddresses: ETH,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'ETH',\n  },\n  {\n    pid: 7,\n    lpSymbol: 'beltETH',\n    lpSource: 'belt',\n    linkUrl: 'https://belt.fi/bsc',\n    isTokenOnly: true,\n    mainAddresses: beltETH,\n    pricePoolAddresses: ETH_BUSD_LP2,\n    lpPrimaryAddresses: ETH,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'ETH',\n    virtualPrice: '1011448308506081845',\n    priceAddress: {\n      56: '0xaa20e8cb61299df2357561c2ac2e1172bc68bc25'\n    },\n  },\n  {\n    pid: 8,\n    lpSymbol: '4Belt',\n    lpSource: 'belt',\n    linkUrl: 'https://belt.fi/bsc',\n    isTokenOnly: true,\n    mainAddresses: Belt4,\n\n    knownPrice: 1,\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: '4Belt',\n    virtualPrice: '967002810124104136',\n    priceAddress: {\n      56: '0xAEA4f7dcd172997947809CE6F12018a6D5c1E8b6'\n    },\n  },\n  {\n    pid: 9,\n    lpSymbol: 'DOP-LP',\n    lpSource: 'dopple',\n    linkUrl: 'https://dopple.finance/Deposit/dop-lps',\n    isTokenOnly: true,\n    mainAddresses: DOP,\n\n    knownPrice: 1,\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'dop',\n    virtualPrice: '1033653437147634690',\n    priceAddress: {\n      56: '0x5162f992EDF7101637446ecCcD5943A9dcC63A8A'\n    },\n  },\n  {\n    pid: 10,\n    lpSymbol: 'BUSD',\n    lpSource: 'Binance',\n    linkUrl: `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${BUSD[56]}`,\n    isTokenOnly: true,\n    mainAddresses: BUSD,\n\n    knownPrice: 1,\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'BUSD',\n  },\n  {\n    pid: 11,\n    lpSymbol: 'beltBUSD',\n    lpSource: 'belt',\n    linkUrl: 'https://belt.fi/bsc',\n    isTokenOnly: true,\n    mainAddresses: beltBUSD,\n\n    knownPrice: 1,\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'BUSD',\n    virtualPrice: '806221854405422288',\n    priceAddress: {\n      56: '0x9171Bf7c050aC8B4cf7835e51F7b4841DFB2cCD0'\n    },\n  },\n  {\n    pid: 12,\n    lpSymbol: 'USDT',\n    lpSource: 'Binance',\n    linkUrl: `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${USDT[56]}`,\n    isTokenOnly: true,\n    mainAddresses: USDT,\n    pricePoolAddresses: USDT_BUSD_LP2,\n    lpPrimaryAddresses: USDT,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'USDT',\n  },\n  {\n    pid: 13,\n    lpSymbol: 'beltUSDT',\n    lpSource: 'belt',\n    linkUrl: 'https://belt.fi/bsc',\n    isTokenOnly: true,\n    mainAddresses: beltUSDT,\n    pricePoolAddresses: USDT_BUSD_LP2,\n    lpPrimaryAddresses: USDT,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'USDT',\n    virtualPrice: '1035606326971902167',\n    priceAddress: {\n      56: '0x55e1b1e49b969c018f2722445cd2dd9818ddcc25'\n    },\n  },\n  {\n    pid: 14,\n    lpSymbol: 'USDC',\n    lpSource: 'Binance',\n    linkUrl: `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${USDC[56]}`,\n    isTokenOnly: true,\n    mainAddresses: USDC,\n    pricePoolAddresses: USDC_BUSD_LP2,\n    lpPrimaryAddresses: USDC,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'USDC',\n  },\n  {\n    pid: 15,\n    lpSymbol: 'beltUSDC',\n    lpSource: 'belt',\n    linkUrl: 'https://belt.fi/bsc',\n    isTokenOnly: true,\n    mainAddresses: beltUSDC,\n    pricePoolAddresses: USDC_BUSD_LP2,\n    lpPrimaryAddresses: USDC,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'USDC',\n    virtualPrice: '1037320784537116179',\n    priceAddress: {\n      56: '0x7a59bf07d529a5fdbab67d597d63d7d5a83e61e5'\n    },\n  },\n  {\n    pid: 16,\n    lpSymbol: 'DAI',\n    lpSource: 'Binance',\n    linkUrl: `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${DAI[56]}`,\n    isTokenOnly: true,\n    mainAddresses: DAI,\n    pricePoolAddresses: DAI_BUSD_LP2,\n    lpPrimaryAddresses: DAI,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'DAI',\n  },\n  {\n    pid: 17,\n    lpSymbol: 'beltDAI',\n    lpSource: 'belt',\n    linkUrl: 'https://belt.fi/bsc',\n    isTokenOnly: true,\n    mainAddresses: beltDAI,\n    pricePoolAddresses: DAI_BUSD_LP2,\n    lpPrimaryAddresses: DAI,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'DAI',\n    virtualPrice: '1008919370822716049',\n    priceAddress: {\n      56: '0x9a86fc508a423ae8a243445dba7ed5364118ab1d'\n    },\n  },\n  \n  {\n    pid: 18,\n    lpSymbol: 'BUSD-BNB',\n    lpSource: 'wault',\n    linkUrl: `https://swap.wault.finance/bsc/index.html#/add/BNB/${BUSD[56]}`,\n    isTokenOnly: false,\n    mainAddresses: BNB_BUSD_WLP,\n    lpPrimaryAddresses: WBNB,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'BUSD',\n    icon2: 'BNB',\n  },\n  {\n    pid: 19,\n    lpSymbol: 'ADA-BNB',\n    lpSource: 'LPv2',\n    linkUrl: `https://exchange.pancakeswap.finance/#/add/BNB/${ADA[56]}`,\n    isTokenOnly: false,\n    mainAddresses: ADA_BNB_LP2,\n    lpPrimaryAddresses: ADA,\n\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n    icon: 'ADA',\n    icon2: 'BNB',\n  },\n  {\n    pid: 20,\n    lpSymbol: 'ETH-BUSD',\n    lpSource: 'wault',\n    linkUrl: `https://swap.wault.finance/bsc/index.html#/add/${ETH[56]}/${BUSD[56]}`,\n    isTokenOnly: false,\n    mainAddresses: ETH_BUSD_WLP,\n    lpPrimaryAddresses: ETH,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'ETH',\n    icon2: 'BUSD',\n  },\n  {\n    pid: 21,\n    lpSymbol: 'USDT-BUSD',\n    lpSource: 'LPv2',\n    linkUrl: `https://exchange.pancakeswap.finance/#/add/${USDT[56]}/${BUSD[56]}`,\n    isTokenOnly: false,\n    mainAddresses: USDT_BUSD_LP2,\n    lpPrimaryAddresses: USDT,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'USDT',\n    icon2: 'BUSD',\n  },\n  {\n    pid: 22,\n    lpSymbol: 'USDT-BUSD',\n    lpSource: 'mdex',\n    linkUrl: `https://bsc.mdex.com/#/create/${USDT[56]}/${BUSD[56]}`,\n    isTokenOnly: false,\n    mainAddresses: USDT_BUSD_MDEX,\n    lpPrimaryAddresses: USDT,\n\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    icon: 'USDT',\n    icon2: 'BUSD',\n  },\n  {\n    pid: 23,\n    lpSymbol: 'BTCB-BNB',\n    lpSource: 'bakery',\n    linkUrl: `https://www.bakeryswap.org/#/add/${BTCB[56]}/ETH`,\n    isTokenOnly: false,\n    mainAddresses: BTCB_WBNB_BAK,\n    lpPrimaryAddresses: BTCB,\n\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n    icon: 'BTCB',\n    icon2: 'BNB',\n  },\n  {\n    pid: 24,\n    lpSymbol: 'BTCB-BNB',\n    lpSource: 'mdex',\n    linkUrl: `https://bsc.mdex.com/#/create/${BTCB[56]}/BNB`,\n    isTokenOnly: false,\n    mainAddresses: BTCB_WBNB_MDEX,\n    lpPrimaryAddresses: BTCB,\n\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n    icon: 'BTCB',\n    icon2: 'BNB',\n  },\n  {\n    pid: 25,\n    lpSymbol: 'ETH-BNB',\n    lpSource: 'mdex',\n    linkUrl: `https://bsc.mdex.com/#/create/${ETH[56]}/BNB`,\n    isTokenOnly: false,\n    mainAddresses: ETH_WBNB_MDEX,\n    lpPrimaryAddresses: ETH,\n\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n    icon: 'BTCB',\n    icon2: 'BNB',\n  },\n\n]\n\nexport default farms\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","export default __webpack_public_path__ + \"static/media/CelticHand.42969f26.woff\";","export default __webpack_public_path__ + \"static/media/CelticHand.f98320be.woff2\";","export default __webpack_public_path__ + \"static/media/CelticHand.0612b4dd.ttf\";","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap-libs/uikit'\n\nimport ProjectFontWoff from '../fonts/CelticHand.woff'\nimport ProjectFontWoff2 from '../fonts/CelticHand.woff2'\nimport ProjectFontTtf from '../fonts/CelticHand.ttf'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'ProjectFont';\n    font-style: normal;\n    font-weight: 400;\n    src:\n        url(${ProjectFontTtf}) format('truetype'),\n        url(${ProjectFontWoff2}) format('woff2'),\n        url(${ProjectFontWoff}) format('woff');\n  }\n  * {\n    font-family: sans-serif, 'ProjectFont';\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\n\nexport const allLanguages = [\n  EN,\n]\n","import React, { useState, useEffect } from 'react'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then(r=>r.json())\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error(\"ERROR\");\n          console.error(e);\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'rainbow.svg',\n    href: '/',\n  },\n  {\n    label: 'Pot of Gold',\n    icon: 'gold-pot-1.svg',\n    href: '/pot',\n  },\n  {\n    label: 'Magic Hat',\n    icon: 'gold-pot.svg',\n    href: '/hat',\n  },\n  {\n    label: 'Referrals',\n    icon: 'leprechaun-3.svg',\n    href: 'https://docs.potofgold.fi/referral-system',\n  },\n  {\n    label: 'Exchange',\n    icon: 'beer-1.svg',\n    href: 'https://exchange.pancakeswap.finance/#/swap?outputCurrency=0xb926F6C23749D2Da0426d0f6B36c96ed7fd3C69f',\n  },\n  {\n    label: 'Liquidity',\n    icon: 'coins.svg',\n    href: 'https://exchange.pancakeswap.finance/#/add/0xe9e7cea3dedca5984780bafc599bd69add087d56/0xb926F6C23749D2Da0426d0f6B36c96ed7fd3C69f',\n  },\n  {\n    label: 'Road Map',\n    icon: 'saint-patrick.svg',\n    href: 'https://docs.potofgold.fi/roadmap',\n  },\n  {\n    label: 'More',\n    icon: 'balloons.svg',\n    items: [\n      {\n        label: 'Docs',\n        href: 'https://docs.potofgold.fi',\n      },\n      {\n        label: 'Github',\n        href: 'https://github.com/proj00x/',\n      },\n      {\n        label: 'Info',\n        href: 'https://pancakeswap.info/token/0xb926F6C23749D2Da0426d0f6B36c96ed7fd3C69f',\n      },\n    ],\n  },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      priceLink=\"https://bscscan.com/token/0xb926F6C23749D2Da0426d0f6B36c96ed7fd3C69f\"\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData(account)\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/pot\">\n              <Farms />\n            </Route>\n            <Route path=\"/hat\">\n              <Farms tokenMode/>\n            </Route>\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID);\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <bsc.UseWalletProvider\n            chainId={chainId}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </bsc.UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {    \n      let tokenAmount: BigNumber;\n      let lpTotalInQuoteToken: BigNumber;\n      let tokenPriceVsQuote: BigNumber;\n      \n      if (farmConfig.isTokenOnly) {\n        const calls = [\n          // Balance of LP tokens in the master chef contract\n          {\n            address: farmConfig.mainAddresses[CHAIN_ID],\n            name: 'balanceOf',\n            params: [getMasterChefAddress()],\n          },\n          // Token decimals\n          {\n            address: farmConfig.mainAddresses[CHAIN_ID],\n            name: 'decimals',\n          },\n        ]\n  \n        if (!farmConfig.knownPrice) {\n          calls.push(\n            // Balance of token in the LP contract\n            {\n              address: farmConfig.lpPrimaryAddresses[CHAIN_ID],\n              name: 'balanceOf',\n              params: [farmConfig.pricePoolAddresses[CHAIN_ID]],\n            },\n            // Balance of quote token on LP contract\n            {\n              address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n              name: 'balanceOf',\n              params: [farmConfig.pricePoolAddresses[CHAIN_ID]],\n            },\n          )\n        }\n\n        const [\n          lpTokenBalanceMC,\n          tokenDecimals,\n          tokenBalanceLP,\n          quoteTokenBlanceLP,\n        ] = await multicall(erc20, calls)\n        tokenAmount = new BigNumber(lpTokenBalanceMC)\n          .div(new BigNumber(10).pow(tokenDecimals));\n\n        if (farmConfig.knownPrice) {\n          tokenPriceVsQuote = new BigNumber(farmConfig.knownPrice);\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP)\n            .div(new BigNumber(tokenBalanceLP));\n        }\n        if (farmConfig.virtualPrice) {\n          tokenPriceVsQuote = tokenPriceVsQuote\n            .times(new BigNumber(farmConfig.virtualPrice).div(new BigNumber(10).pow(tokenDecimals)))\n        }\n\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote);\n        \n      } else {\n\n        const calls = [\n          // Balance of token in the LP contract\n          {\n            address: farmConfig.lpPrimaryAddresses[CHAIN_ID],\n            name: 'balanceOf',\n            params: [farmConfig.mainAddresses[CHAIN_ID]],\n          },\n          // Balance of quote token on LP contract\n          {\n            address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n            name: 'balanceOf',\n            params: [farmConfig.mainAddresses[CHAIN_ID]],\n          },\n          // Balance of LP tokens in the master chef contract\n          {\n            address: farmConfig.mainAddresses[CHAIN_ID],\n            name: 'balanceOf',\n            params: [getMasterChefAddress()],\n          },\n          // Total supply of LP tokens\n          {\n            address: farmConfig.mainAddresses[CHAIN_ID],\n            name: 'totalSupply',\n          },\n          // Token decimals\n          {\n            address: farmConfig.lpPrimaryAddresses[CHAIN_ID],\n            name: 'decimals',\n          },\n          // Quote token decimals\n          {\n            address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n            name: 'decimals',\n          },\n        ]\n  \n        const [\n          tokenBalanceLP,\n          quoteTokenBlanceLP,\n          lpTokenBalanceMC,\n          lpTotalSupply,\n          tokenDecimals,\n          quoteTokenDecimals\n        ] = await multicall(erc20, calls)\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = quoteTokenAmount.times(new BigNumber(2))\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP)\n          .div(new BigNumber(10).pow(tokenDecimals))\n          .times(lpTokenRatio)\n\n        if (tokenAmount.comparedTo(0) > 0) {\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount);\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\n        }\n      }\n\n      const [info, totalAllocPoint ] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP.toNumber(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.mainAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.mainAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingToken',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n\nexport const fetchUserReferrer = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = [{\n    address: masterChefAdress,\n    name: 'referrals',\n    params: [account],\n  }]\n\n  const raw = await multicall(masterchefABI, calls)\n  \n  return raw[0][0]\n}","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n  fetchUserReferrer,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig], referrer: null }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n    setReferrerData: (state, action) => {\n      state.referrer = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData, setReferrerData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = (account) => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n\n  if (account) {\n    const referrer = await fetchUserReferrer(account)\n    dispatch(setReferrerData(referrer))\n  }\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n"],"sourceRoot":""}